openapi: 3.0.0
info:
  version: "1.0.0"
  title: "2022-02-react-node-toyproject"
  description: "[22-23 GDSC Sookmyung 3기]  1분기 React-Node 토이프로젝트를 위한 저장소"
servers:
  - description: "Server"
    url: http://localhost:3000
# API 요청 경로 및 데이터 세팅
paths:
  /blog/{blogId}:
    put:
      summary: 블로그 글을 업데이트한다.
      description: Blog DB의 title, content, image을 업데이트한다.
      tags:
        - Put 방식
      parameters:
        - name: blogId
          in: path
          description: 블로그 글의 ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "객체 (JSON). data는 블로그 글의 스키마다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "글 수정 성공"
                  data:
                    type: object
                    properties:
                      _id:
                        type: string
                        example: "638c4fc4cf3aee101b9a07a7"
                      user_id:
                        type: string
                      title:
                        type: string
                      image:
                        type: string
                        example: "url"
                      content:
                        type: string
                      created_at:
                        type: string
                        example: "2022-12-04T07:44:04.106Z"
                      __v:
                        type: number
        "500":
          description: "객체 (JSON)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "서버 내부 오류"
    delete:
      summary: 블로그 글을 삭제한다.
      description: Blog DB의 title, content, image을 삭제한다.
      tags:
        - Delete 방식
      parameters:
        - name: blogId
          in: path
          description: 블로그 글의 ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "객체 (JSON)."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "글 삭제 성공"
        "500":
          description: "객체 (JSON)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "서버 내부 오류"
  /blog/{userId}:
    get:
      summary: 유저ID를 통해 유저별 블로그 글을 조회한다.
      description: Blog DB의 title, content, image을 업데이트한다.
      tags:
        - Get 방식
      parameters:
        - name: userId
          in: path
          description: 사용자의 ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: "객체 (JSON). data는 블로그 글의 스키마다."
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: "유저별 글 조회 성공"
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          example: "638c4fc4cf3aee101b9a07a7"
                        user_id:
                          type: string
                        title:
                          type: string
                        image:
                          type: string
                          example: "url"
                        content:
                          type: string
                        created_at:
                          type: string
                          example: "2022-12-04T07:44:04.106Z"
                        __v:
                          type: number
                          example: 0
        "500":
          description: "객체 (JSON)"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "서버 내부 오류"
